[
  {
    "objectID": "index.html#agenda",
    "href": "index.html#agenda",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Agenda",
    "text": "Agenda\n\nMeta-Psychology computational reproducibility assessment\nCommon errors in computational reproducibility\nBest practices for reproducible analyses \nDiscussion"
  },
  {
    "objectID": "index.html#quick-overview-of-the-exercise",
    "href": "index.html#quick-overview-of-the-exercise",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Quick overview of the exercise",
    "text": "Quick overview of the exercise\n\ntry to reproduce code from a paper accepted for publication in MP\nnote down what’s causing troubles in reproducing the paper\nnote down what is correctly done\ncompare the results from the code output to reported results in the manuscript"
  },
  {
    "objectID": "index.html#transparency-is-a-way-out-of-the-replication-crisis",
    "href": "index.html#transparency-is-a-way-out-of-the-replication-crisis",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Transparency is a way out of the replication crisis",
    "text": "Transparency is a way out of the replication crisis\n\nYet, transparency only allows assessing reliability of research findings\nMuch focus has been given to replication (i.e., same analysis on new data) or robustness (i.e., new analyses same data)\nLess attention to the most basic:\n\nkeeping data, analyses and reporting free from errors\n\nComputational reproducibility checks are still rare"
  },
  {
    "objectID": "index.html#meta-psychology",
    "href": "index.html#meta-psychology",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Meta-Psychology",
    "text": "Meta-Psychology\n\nMeta-Psychology pioneering in this area (#1 on TOP FACTOR)\nMeta-Psychology is a community run journal\nNo APC (Diamond OA)\nPublishes anything “meta” in psychology:\n\nreviews, meta-analyses, commentaries, replications.\n\nThis talk is our 5 years experience with computational reproducibility at MP"
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Overview",
    "text": "Overview\n\n47 articles reproduced since journal’s inception in 2017\npapers reproduced in 2022: 13\n\npapers reproduced without any errors: 2 (with one being simulation study that required running code with fewer iterations)\nerrors in code: 8 (e.g., missing library calls, problems knitting reports, container-emulating packages, deprecated functions)\nerrors in reported results: 6 (e.g., wrong sample size, mean, plot output discrepancy, copy paste error, package update changed output)"
  },
  {
    "objectID": "index.html#reproducibility-checklist",
    "href": "index.html#reproducibility-checklist",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Reproducibility Checklist",
    "text": "Reproducibility Checklist"
  },
  {
    "objectID": "index.html#most-common-errors-we-encountered-happened-because-of",
    "href": "index.html#most-common-errors-we-encountered-happened-because-of",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Most common errors we encountered happened because of:",
    "text": "Most common errors we encountered happened because of:\n\nRenaming files\nFunctions that were not working as they should\n\nDeprecated functions\n\nHard-coding file paths\nOlder software versions"
  },
  {
    "objectID": "index.html#functions-not-working",
    "href": "index.html#functions-not-working",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Functions Not Working",
    "text": "Functions Not Working\nCommon reasons why a function may not run properly:\n\nIncorrect input arguments or parameters\nUndefined or out-of-scope variables\nMissing or outdated dependencies\n\n\n# Example function call without loading library\nmy_function()\n\n`Error in my_function() : could not find function \"my_function\"`\n\n\nDeprecated functions\n\n\nmydata <- read.csv(\"myfile.csv\", header=TRUE)\n\n`Warning message: In read.csv(\"myfile.csv\", header = TRUE) :\n   'read.csv' is deprecated: use 'read.csv2' instead`\n\n\nImproper syntax or formatting errors\nLogical errors or incorrect algorithmic design"
  },
  {
    "objectID": "index.html#hard-coding-file-paths",
    "href": "index.html#hard-coding-file-paths",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Hard-Coding File Paths",
    "text": "Hard-Coding File Paths\n\nhard-coding the absolute path to the file will cause issues when running the code in a different environment\n\n\n# Hard-coded file path\ndata_file <- \"C:/Users/username/Documents/data.csv\"\n\n# Load data from file\ndata <- read.csv(data_file)\n\n\nrelative paths allow reproducing code across computers and operating systems\n\n\n# load data from a directory in the project \ndata_file <- \"data/data.csv\""
  },
  {
    "objectID": "index.html#software-versions",
    "href": "index.html#software-versions",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Software Versions",
    "text": "Software Versions\n\nNot stating which version of the software was used can cause troubles while reproducing the results in different environments\n\n\nError: package 'dplyr' requires R version 4.0.0 or later\n\n\non the other hand, some packages may stop being maintained and newer versions of software can cause issues with functions\n\n\nWarning: package 'plyr' was built under R version 3.6.3"
  },
  {
    "objectID": "index.html#most-common-reasons-for-non-reproducible-results",
    "href": "index.html#most-common-reasons-for-non-reproducible-results",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Most common reasons for non-reproducible results",
    "text": "Most common reasons for non-reproducible results\n\ncopy-paste errors\nwrong rounding\nsimulation based analyses"
  },
  {
    "objectID": "index.html#setting-seed-for-simulations",
    "href": "index.html#setting-seed-for-simulations",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Setting Seed for Simulations",
    "text": "Setting Seed for Simulations\n\nbootstrapping confidence intervals\nsimulating datasets\n\n\nhead(rnorm(100, mean = 0, sd = 1))\n\n[1] -0.86943091 -1.02729501  0.15032230 -1.48502696 -0.15172372  0.07539084\n\n\n\nset.seed(1234)\nhead(rnorm(100, mean = 0, sd = 1))\n\n[1] -1.2070657  0.2774292  1.0844412 -2.3456977  0.4291247  0.5060559"
  },
  {
    "objectID": "index.html#wrong-roundingcopy-paste-errors",
    "href": "index.html#wrong-roundingcopy-paste-errors",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Wrong Rounding/Copy-Paste Errors",
    "text": "Wrong Rounding/Copy-Paste Errors\n\ndata <- iris\nmean(iris$Sepal.Width)\n\n[1] 3.057333\n\nround(mean(iris$Sepal.Width))\n\n[1] 3\n\nround(mean(iris$Sepal.Width), 2)\n\n[1] 3.06\n\n\n\ndata <- iris\n# Hard-coded result\ncat(\"The mean value is 5.\")\n\nThe mean value is 5.\n\n# Extracted from code\ncat(paste0(\"The mean value is \", round(mean(iris$Sepal.Length), 2), \".\"))\n\nThe mean value is 5.84."
  },
  {
    "objectID": "index.html#importance-of-structure",
    "href": "index.html#importance-of-structure",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Importance of structure",
    "text": "Importance of structure\n\nPsych-DS\ncreating projects allows using relative paths\nprojects can be easily sent to and managed by other people\nhierarchical project structure makes the analysis process clearer for the third party\n\n\nmy_project/\n├── README.txt\n├── codebook.txt\n├── data/\n│   ├── raw/\n│   │   ├── data_file_1.csv\n│   │   ├── data_file_2.csv\n│   │   └── ...\n│   ├── processed/\n│   │   ├── data_file_1_cleaned.csv\n│   │   ├── data_file_2_cleaned.csv\n│   │   └── ...\n│   └── ...\n├── docs/\n│   ├── report.pdf\n│   ├── manuscript.Rmd\n│   └── ...\n├── src/\n│   ├── data_cleaning.R\n│   ├── data_analysis.R\n│   └── ...\n└── ..."
  },
  {
    "objectID": "index.html#file-naming-conventions",
    "href": "index.html#file-naming-conventions",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "File naming conventions",
    "text": "File naming conventions\n\nconsistency: keep capitalization consistent, as well as use of punctuation, avoid special characters\nclarity: names should be descriptive and clear, even if it means it will be longer\nchronology: names should indicate the correct order of steps"
  },
  {
    "objectID": "index.html#rmarkdownquarto",
    "href": "index.html#rmarkdownquarto",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "RMarkdown/Quarto",
    "text": "RMarkdown/Quarto\n\ncompiling reports that contain the code and results in one document allows a simpler workflow and minimizes errors caused by copy-pasting\npapaja package in R"
  },
  {
    "objectID": "index.html#readme-and-codebook-files",
    "href": "index.html#readme-and-codebook-files",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "README and codebook files",
    "text": "README and codebook files\n\n\n\nREADME\n\n\nComputing environment; package version and time necessary to compute (show reproducibility checklists)\nProject description: A brief description of the project and its purpose.\nInstallation instructions: Step-by-step instructions on how to install and set up the project. This should include any dependencies or prerequisites required to run the project\n\n\n\n\n\nCodebook\n\nOverview of all variables: name and description of each variable\ncodebook\n\n\nlibrary(codebook)\nnew_codebook_rmd(codebook)"
  },
  {
    "objectID": "index.html#containerization",
    "href": "index.html#containerization",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Containerization",
    "text": "Containerization\n\nDocker\nCodeocean\nR packages (e.g., renv)"
  },
  {
    "objectID": "index.html#point-and-click-alternative",
    "href": "index.html#point-and-click-alternative",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Point-and-click alternative",
    "text": "Point-and-click alternative\n\nopen source: JASP or JAMOVI\njamovi files can be saved with analyses and edited data in a transparent way *Note: although .omv (jamovi) files include datasets, always provide raw .tsv/.csv files separately"
  },
  {
    "objectID": "index.html#task",
    "href": "index.html#task",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Task",
    "text": "Task\n\ntry to reproduce code from a paper accepted for publication in MP\ntry to reproduce code from one of the participants’ projects\nnote down what’s causing troubles in reproducing the paper (if anything)\nnote down what is correctly done\ncompare the results from the code output to reported results in the manuscript\n\n\n\nMeta-Psychology"
  },
  {
    "objectID": "codebook.html",
    "href": "codebook.html",
    "title": "Codebook",
    "section": "",
    "text": "Here, we’re just setting a few options.\nNow, we’re preparing our data for the codebook.\nCreate codebook"
  },
  {
    "objectID": "codebook.html#missingness-report",
    "href": "codebook.html#missingness-report",
    "title": "Codebook",
    "section": "Missingness report",
    "text": "Missingness report"
  },
  {
    "objectID": "codebook.html#codebook-table",
    "href": "codebook.html#codebook-table",
    "title": "Codebook",
    "section": "Codebook table",
    "text": "Codebook table"
  },
  {
    "objectID": "index.html#power-of-ai",
    "href": "index.html#power-of-ai",
    "title": "Why your code doesn’t reproduce: Lessons learned from Meta-Psychology",
    "section": "Power of AI",
    "text": "Power of AI\n\nwith the rise of ChatGPT and LLM-based apps accessible to public, there is no reason why provided materials cannot be well documented\n\nExamples of use that can save time and promote reproducibility (ideas provided by ChatGPT):\n\n\n\n\n\n\n\n\nNumber\nTask\nDescription\n\n\n\n\n1\nDrafting Detailed Documentation\nChatGPT can assist in writing comprehensive documentation that covers all aspects of the code including installation, usage, and troubleshooting.\n\n\n2\nGenerating README Files\nIt can create README files that provide a clear overview of the project, setup instructions, and usage guidelines.\n\n\n3\nPreparing Installation Guides\nChatGPT can write detailed installation guides to ensure users can recreate the necessary environment to run the code.\n\n\n4\nAutomating Responses to Common Issues\nIt can draft standard responses for common issues or questions for inclusion in an FAQ section.\n\n\n5\nCreating Example Code Snippets\nChatGPT can generate code snippets to demonstrate the usage of different functions or classes.\n\n\n6\nWriting Test Scripts\nIt can assist in writing test scripts to verify the functionality of different parts of the code.\n\n\n7\nDeveloping Code Annotations\nChatGPT can help annotate code, providing explanations for complex sections and clarifying the logic behind certain decisions.\n\n\n8\nAssisting with Dependency Lists\nIt can help compile and explain a list of dependencies, ensuring all necessary packages are included.\n\n\n9\nFormatting and Linting Code\nChatGPT can offer guidance on code formatting and linting to ensure the code adheres to standard practices.\n\n\n10\nCreating Data Preprocessing Scripts\nFor projects involving data, it can help write scripts for data cleaning and preprocessing.\n\n\n11\nDrafting Contribution Guidelines\nChatGPT can formulate guidelines for how others can contribute to the project.\n\n\n12\nVersion Control Guidance\nIt can provide tips on using version control systems effectively for tracking changes and ensuring reproducibility.\n\n\n13\nGenerating Virtual Environment Setup Instructions\nChatGPT can guide the creation of instructions for setting up virtual environments.\n\n\n14\nAssisting with Continuous Integration Setup\nIt can offer insights into setting up CI/CD pipelines for automated testing and consistency across environments.\n\n\n15\nAdvising on Licensing Issues\nChatGPT can provide information on different software licenses to help authors choose the right one for their code."
  }
]